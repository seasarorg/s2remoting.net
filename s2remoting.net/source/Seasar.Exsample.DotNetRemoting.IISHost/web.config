<?xml version="1.0"?>
<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">
	<configSections>
		<section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
		<section name="seasar" type="Seasar.Framework.Xml.S2SectionHandler, Seasar"/>
	</configSections>
	<log4net>
		<appender name="ASPNetTraceAppender" type="log4net.Appender.ASPNetTraceAppender">
			<layout type="log4net.Layout.PatternLayout">
				<param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
			</layout>
		</appender>
		<appender name="TraceAppender" type="log4net.Appender.TraceAppender">
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%d [%t] %-5p %c - %m%n"/>
			</layout>
		</appender>
		<root>
			<level value="ERROR"/>
		</root>
		<logger name="Seasar.Framework.Aop.Interceptors">
			<level value="DEBUG"/>
			<appender-ref ref="TraceAppender"/>
		</logger>
		<logger name="Seasar.Exsample.Service">
			<level value="DEBUG"/>
			<appender-ref ref="TraceAppender"/>
		</logger>
		<logger name="Seasar.Remoting">
			<level value="DEBUG"/>
			<appender-ref ref="TraceAppender"/>
		</logger>
	</log4net>
	<seasar>
		<assemblys>
			<assembly>System.Runtime.Remoting</assembly>
			<assembly>Seasar.Exsample.Service</assembly>
			<assembly>Seasar.Remoting</assembly>
			<assembly>Seasar</assembly>
		</assemblys>
	</seasar>
	<system.web>
		<!--  ダイナミック デバッグ コンパイル
          ASPX デバッグを有効にするには、compilation debug="true" に設定します。この値を False に設定すると、
          このアプリケーションの実行時のパフォーマンスが向上します。
          デバッグ シンボル (.pdb 情報) をコンパイルされたページに挿入するには、
          compilation debug="true" に設定します。この設定によって、実行速度の遅い大きなファイルが作成されます。
          デバッグ時にのみ、この値を true に設定して、
          それ以外のときは、常に false に設定してください。詳細については、
          ASP .NET ファイルのデバッグ  ドキュメントを参照してください。
    -->
		<compilation defaultLanguage="c#" debug="true">
			<compilers>
				<compiler language="c#" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" extension=".cs" compilerOptions="/d:DEBUG;TRACE"/></compilers>
			<assemblies>
				<add assembly="System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Management, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies></compilation>
		<!--  カスタム エラー メッセージの設定
          カスタム エラー メッセージを有効にするには customErrors mode="On"または "RemoteOnly" にします。無効にする場合は "Off" に設定します。
          処理する各エラーに <error> タグを追加してください。

          "オン" 常にカスタム (理解しやすい) メッセージを表示します。
          "オフ" 常に詳細な ASP.NET エラー情報を表示します。
          "リモートのみ" ローカル Web サーバーで実行していないユーザーに対してのみ、
          常にカスタム (理解しやすい) メッセージを表示します。この設定は、セキュリティを考慮して、アプリケーションの詳細がリモートのクライアントに
          表示されないようにする推奨された設定です。
    -->
		<customErrors mode="RemoteOnly"/>
		<!--  認証の設定 
          このセクションは、アプリケーションの認証ポリシーを設定します。使用できるモードは、"Windows"、
          "Forms"、"Passport" および "None" です。

          "None" 認証が実行されません。 
          "Windows" IIS はアプリケーションの設定に従って認証 (基本、ダイジェスト、または統合 Windows) 
           を実行します。匿名アクセスは IIS では無効でなければなりません。
          "Forms" ユーザーが資格情報を入力するカスタム フォーム (Web ページ) を提供してください。
           そして、アプリケーションで認証してください。ユーザーの資格情報のトークンは Cookie に保存されています。
          "Passport" 認証は、単一のログオンおよびメンバ サイトのコア プロファイル サービスを提供する 
           Microsoft により提供される管理認証サービスを使用して実行されます。
    -->
		<authentication mode="Windows"/>
		<!--  権限の設定
          このセクションは、アプリケーションの権限のポリシーを設定します。この設定により、ユーザーまたはロールによるアプリケーション リソースへのアクセスを許可したり、
          拒否したりできます。ワイルドカード : "*" は全員を、"?" は匿名 
          (未認証) ユーザーを表します。
    -->
		<authorization>
			<allow users="*"/>
			<!-- 全ユーザーへの許可 -->
			<!--  <allow     users="[ユーザーのコンマ区切り一覧]"
                             roles="[ロールのコンマ区切り一覧]"/>
                  <deny      users="[ユーザーのコンマ区切り一覧]"
                             roles="[ロールのコンマ区切り一覧]"/>
            -->
		</authorization>
		<!--  アプリケーション レベルのトレース ログの設定
          アプリケーション レベルのトレースは、アプリケーション内の全ページのトレース ログ出力を有効にします。
          アプリケーション トレース ログを有効にするには、trace enabled="true" に設定します。pageOutput="true" に設定された場合、
          トレース情報が各ページの下に表示されます。それ以外の場合は、
          Web アプリケーション ルートから "trace.axd" ページを参照してアプリケーション トレースを
          表示できます。
    -->
		<trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true"/>
		<!--  セッション状態の設定
          既定では、ASP.NET は Cookie を使用して、要求がどのセッションに属するかを識別します。
           Cookie が使用できない場合は、URL にセッション識別子を入力することで、セッションを見つけることができます。
          Cookie を有効にするには、sessionState を cookieless="false" に設定してください。
    -->
		<sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;Trusted_Connection=yes" cookieless="false" timeout="20"/>
		<!--  グローバリゼーション
          このセクションはアプリケーションのグローバリゼーション設定を行います。 
    -->
		<globalization requestEncoding="utf-8" responseEncoding="utf-8"/>
		<xhtmlConformance mode="Legacy"/></system.web>
</configuration>
